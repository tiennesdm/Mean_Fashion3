{"version":3,"file":"ng7-mat-breadcrumb.js.map","sources":["ng://ng7-mat-breadcrumb/lib/ng7-mat-breadcrumb.service.ts","ng://ng7-mat-breadcrumb/lib/ng7-mat-breadcrumb.component.ts","ng://ng7-mat-breadcrumb/lib/ng7-mat-breadcrumb.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Ng7MatBreadcrumbService {\n\n  public breadcrumbLabels: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\n\n  constructor() { }\n\n  updateBreadcrumbLabels(labels: any) {\n    this.breadcrumbLabels.next(labels);\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationEnd, PRIMARY_OUTLET, RoutesRecognized } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { map, mergeMap } from 'rxjs/internal/operators';\nimport { Breadcrumb } from './breadcrumb.model';\nimport { Ng7MatBreadcrumbService } from './ng7-mat-breadcrumb.service';\nimport { from } from 'rxjs';\n@Component({\n  selector: 'app-ng7-mat-breadcrumb',\n  templateUrl: './ng7-mat-breadcrumb.component.html',\n  styleUrls: ['./ng7-mat-breadcrumb.component.css']\n})\nexport class Ng7MatBreadcrumbComponent implements OnInit {\n  breadcrumb: Breadcrumb[] = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private ng7MatBreadcrumbService: Ng7MatBreadcrumbService\n  ) {\n    this.breadCrumbData();\n  }\n\n  ngOnInit() {\n    this.ng7MatBreadcrumbService.breadcrumbLabels.subscribe((labelData) => {\n      for (const label in labelData) {\n        if (labelData.hasOwnProperty(label)) {\n          this.breadcrumb.map((crumb) => {\n            const labelParams = crumb.label.match(/[^{{]+(?=\\}})/g);\n            if (labelParams) {\n              for (const labelParam of labelParams) {\n                const dyanmicData = labelData[label];\n                if (labelParam === label) {\n                  crumb.label = crumb.label.replace('{{' + labelParam + '}}', dyanmicData);\n                }\n              }\n            }\n          });\n        }\n      }\n\n    });\n  }\n\n  breadCrumbData() {\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .pipe(map(() => this.activatedRoute))\n      .pipe(map((route) => {\n        while (route.firstChild) { route = route.firstChild; }\n        return route;\n      }))\n      .pipe(filter(route => route.outlet === PRIMARY_OUTLET))\n      .subscribe(route => {\n\n        if (route.snapshot.data.breadcrumb) {\n          const breadcrumb = (JSON.parse(JSON.stringify(route.snapshot.data.breadcrumb)));\n          breadcrumb.map((crumb) => {\n            const urlChunks = crumb.url.split('/');\n            for (const chunk of urlChunks) {\n              if (chunk.includes(':')) {\n                const paramID = chunk.replace(':', '');\n                const routerParamID = route.snapshot.params[paramID];\n                crumb.url = crumb.url.replace(`:${paramID}`, routerParamID);\n              }\n            }\n\n            const labelParams = crumb.label.match(/[^{{]+(?=\\}})/g);\n            if (labelParams) {\n              for (const labelParam of labelParams) {\n                const routerParamID = route.snapshot.params[labelParam.trim()];\n                if (routerParamID) {\n                  crumb.label = crumb.label.replace('{{' + labelParam + '}}', routerParamID);\n                } else {\n                  // crumb.label = crumb.label.replace('{{' + labelParam + '}}', '');\n                }\n              }\n            }\n\n          });\n          this.breadcrumb = breadcrumb;\n        } else {\n          this.breadcrumb = [];\n        }\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Ng7MatBreadcrumbComponent } from './ng7-mat-breadcrumb.component';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\n\n@NgModule({\n  declarations: [Ng7MatBreadcrumbComponent],\n  imports: [\n    RouterModule,\n    CommonModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatListModule\n  ],\n  exports: [Ng7MatBreadcrumbComponent]\n})\nexport class Ng7MatBreadcrumbModule { }\n"],"names":[],"mappings":"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"}
