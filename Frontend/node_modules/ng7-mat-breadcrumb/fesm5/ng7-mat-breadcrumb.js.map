{"version":3,"file":"ng7-mat-breadcrumb.js.map","sources":["ng://ng7-mat-breadcrumb/lib/ng7-mat-breadcrumb.service.ts","ng://ng7-mat-breadcrumb/lib/ng7-mat-breadcrumb.component.ts","ng://ng7-mat-breadcrumb/lib/ng7-mat-breadcrumb.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Ng7MatBreadcrumbService {\n\n  public breadcrumbLabels: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\n\n  constructor() { }\n\n  updateBreadcrumbLabels(labels: any) {\n    this.breadcrumbLabels.next(labels);\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationEnd, PRIMARY_OUTLET, RoutesRecognized } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { map, mergeMap } from 'rxjs/internal/operators';\nimport { Breadcrumb } from './breadcrumb.model';\nimport { Ng7MatBreadcrumbService } from './ng7-mat-breadcrumb.service';\nimport { from } from 'rxjs';\n@Component({\n  selector: 'app-ng7-mat-breadcrumb',\n  templateUrl: './ng7-mat-breadcrumb.component.html',\n  styleUrls: ['./ng7-mat-breadcrumb.component.css']\n})\nexport class Ng7MatBreadcrumbComponent implements OnInit {\n  breadcrumb: Breadcrumb[] = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private ng7MatBreadcrumbService: Ng7MatBreadcrumbService\n  ) {\n    this.breadCrumbData();\n  }\n\n  ngOnInit() {\n    this.ng7MatBreadcrumbService.breadcrumbLabels.subscribe((labelData) => {\n      for (const label in labelData) {\n        if (labelData.hasOwnProperty(label)) {\n          this.breadcrumb.map((crumb) => {\n            const labelParams = crumb.label.match(/[^{{]+(?=\\}})/g);\n            if (labelParams) {\n              for (const labelParam of labelParams) {\n                const dyanmicData = labelData[label];\n                if (labelParam === label) {\n                  crumb.label = crumb.label.replace('{{' + labelParam + '}}', dyanmicData);\n                }\n              }\n            }\n          });\n        }\n      }\n\n    });\n  }\n\n  breadCrumbData() {\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .pipe(map(() => this.activatedRoute))\n      .pipe(map((route) => {\n        while (route.firstChild) { route = route.firstChild; }\n        return route;\n      }))\n      .pipe(filter(route => route.outlet === PRIMARY_OUTLET))\n      .subscribe(route => {\n\n        if (route.snapshot.data.breadcrumb) {\n          const breadcrumb = (JSON.parse(JSON.stringify(route.snapshot.data.breadcrumb)));\n          breadcrumb.map((crumb) => {\n            const urlChunks = crumb.url.split('/');\n            for (const chunk of urlChunks) {\n              if (chunk.includes(':')) {\n                const paramID = chunk.replace(':', '');\n                const routerParamID = route.snapshot.params[paramID];\n                crumb.url = crumb.url.replace(`:${paramID}`, routerParamID);\n              }\n            }\n\n            const labelParams = crumb.label.match(/[^{{]+(?=\\}})/g);\n            if (labelParams) {\n              for (const labelParam of labelParams) {\n                const routerParamID = route.snapshot.params[labelParam.trim()];\n                if (routerParamID) {\n                  crumb.label = crumb.label.replace('{{' + labelParam + '}}', routerParamID);\n                } else {\n                  // crumb.label = crumb.label.replace('{{' + labelParam + '}}', '');\n                }\n              }\n            }\n\n          });\n          this.breadcrumb = breadcrumb;\n        } else {\n          this.breadcrumb = [];\n        }\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Ng7MatBreadcrumbComponent } from './ng7-mat-breadcrumb.component';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\n\n@NgModule({\n  declarations: [Ng7MatBreadcrumbComponent],\n  imports: [\n    RouterModule,\n    CommonModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatListModule\n  ],\n  exports: [Ng7MatBreadcrumbComponent]\n})\nexport class Ng7MatBreadcrumbModule { }\n"],"names":["tslib_1.__values"],"mappings":";;;;;;;;;;;;;;;AAAA;IAUE;QAFO,qBAAgB,GAA2B,IAAI,eAAe,CAAQ,EAAE,CAAC,CAAC;KAEhE;;;;;IAEjB,wDAAsB;;;;IAAtB,UAAuB,MAAW;QAChC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACpC;;gBAXF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;;kCALD;CAGA;;;;;;;ICYE,mCACU,cAA8B,EAC9B,MAAc,EACd,uBAAgD;QAFhD,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,4BAAuB,GAAvB,uBAAuB,CAAyB;QAL1D,eAAU,GAAiB,EAAE,CAAC;QAO5B,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;;;;IAED,4CAAQ;;;IAAR;QAAA,iBAmBC;QAlBC,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,SAAS;;;;QAAC,UAAC,SAAS;oCACrD,KAAK;gBACd,IAAI,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;oBACnC,KAAI,CAAC,UAAU,CAAC,GAAG;;;;oBAAC,UAAC,KAAK;;;4BAClB,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC;wBACvD,IAAI,WAAW,EAAE;;gCACf,KAAyB,IAAA,gBAAAA,SAAA,WAAW,CAAA,wCAAA,iEAAE;oCAAjC,IAAM,UAAU,wBAAA;;wCACb,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC;oCACpC,IAAI,UAAU,KAAK,KAAK,EAAE;wCACxB,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,GAAG,UAAU,GAAG,IAAI,EAAE,WAAW,CAAC,CAAC;qCAC1E;iCACF;;;;;;;;;yBACF;qBACF,EAAC,CAAC;iBACJ;;YAbH,KAAK,IAAM,KAAK,IAAI,SAAS;wBAAlB,KAAK;aAcf;SAEF,EAAC,CAAC;KACJ;;;;IAED,kDAAc;;;IAAd;QAAA,iBAyCC;QAxCC,IAAI,CAAC,MAAM,CAAC,MAAM;aACf,IAAI,CAAC,MAAM;;;;QAAC,UAAA,KAAK,IAAI,OAAA,KAAK,YAAY,aAAa,GAAA,EAAC,CAAC;aACrD,IAAI,CAAC,GAAG;;;QAAC,cAAM,OAAA,KAAI,CAAC,cAAc,GAAA,EAAC,CAAC;aACpC,IAAI,CAAC,GAAG;;;;QAAC,UAAC,KAAK;YACd,OAAO,KAAK,CAAC,UAAU,EAAE;gBAAE,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC;aAAE;YACtD,OAAO,KAAK,CAAC;SACd,EAAC,CAAC;aACF,IAAI,CAAC,MAAM;;;;QAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,MAAM,KAAK,cAAc,GAAA,EAAC,CAAC;aACtD,SAAS;;;;QAAC,UAAA,KAAK;YAEd,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE;;oBAC5B,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC/E,UAAU,CAAC,GAAG;;;;gBAAC,UAAC,KAAK;;;wBACb,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;;wBACtC,KAAoB,IAAA,cAAAA,SAAA,SAAS,CAAA,oCAAA,2DAAE;4BAA1B,IAAM,KAAK,sBAAA;4BACd,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;;oCACjB,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;;oCAChC,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC;gCACpD,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,MAAI,OAAS,EAAE,aAAa,CAAC,CAAC;6BAC7D;yBACF;;;;;;;;;;wBAEK,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC;oBACvD,IAAI,WAAW,EAAE;;4BACf,KAAyB,IAAA,gBAAAA,SAAA,WAAW,CAAA,wCAAA,iEAAE;gCAAjC,IAAM,UAAU,wBAAA;;oCACb,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;gCAC9D,IAAI,aAAa,EAAE;oCACjB,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,GAAG,UAAU,GAAG,IAAI,EAAE,aAAa,CAAC,CAAC;iCAC5E,AAEA;6BACF;;;;;;;;;qBACF;iBAEF,EAAC,CAAC;gBACH,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;aAC9B;iBAAM;gBACL,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;aACtB;SACF,EAAC,CAAC;KACN;;gBA9EF,SAAS,SAAC;oBACT,QAAQ,EAAE,wBAAwB;oBAClC,orBAAkD;;iBAEnD;;;;gBAVQ,cAAc;gBAAE,MAAM;gBAItB,uBAAuB;;IAiFhC,gCAAC;CA/ED;;;;;;ACPA;IAQA;KAWuC;;gBAXtC,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,yBAAyB,CAAC;oBACzC,OAAO,EAAE;wBACP,YAAY;wBACZ,YAAY;wBACZ,uBAAuB;wBACvB,gBAAgB;wBAChB,aAAa;qBACd;oBACD,OAAO,EAAE,CAAC,yBAAyB,CAAC;iBACrC;;IACqC,6BAAC;CAXvC;;;;;;;;;;;;;;"}
