/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { PpBreadcrumbsService } from './breadcrumbs.service';
var PpBreadcrumbsComponent = /** @class */ (function () {
    function PpBreadcrumbsComponent(service) {
        this.service = service;
        this.subscriptions = [];
    }
    /**
     * @return {?}
     */
    PpBreadcrumbsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.subscriptions.push(this.service.crumbs$.subscribe((/**
         * @param {?} x
         * @return {?}
         */
        function (x) {
            _this.crumbs = x;
        })));
    };
    /**
     * @return {?}
     */
    PpBreadcrumbsComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.subscriptions.forEach((/**
         * @param {?} x
         * @return {?}
         */
        function (x) { return x.unsubscribe(); }));
    };
    PpBreadcrumbsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'pp-breadcrumbs',
                    template: "<ol *ngIf=\"crumbs.length\" class=\"breadcrumb\">\r\n  <li *ngFor=\"let crumb of crumbs; let first = first; let last = last\" [ngClass]=\"{ 'active': last }\" class=\"breadcrumb-item\">\r\n    <a *ngIf=\"!last; else lastBreadcrumb\" [routerLink]=\"crumb.path\" [innerHTML]=\"crumb.text\"></a>\r\n    <ng-template #lastBreadcrumb>\r\n      <span [innerHTML]=\"crumb.text\"></span>\r\n    </ng-template>\r\n  </li>\r\n</ol>\r\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    PpBreadcrumbsComponent.ctorParameters = function () { return [
        { type: PpBreadcrumbsService }
    ]; };
    return PpBreadcrumbsComponent;
}());
export { PpBreadcrumbsComponent };
if (false) {
    /** @type {?} */
    PpBreadcrumbsComponent.prototype.crumbs;
    /** @type {?} */
    PpBreadcrumbsComponent.prototype.subscriptions;
    /** @type {?} */
    PpBreadcrumbsComponent.prototype.service;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJlYWRjcnVtYnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vcHAtYnJlYWRjcnVtYnMvIiwic291cmNlcyI6WyJsaWIvYnJlYWRjcnVtYnMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFvQixNQUFNLGVBQWUsQ0FBQztBQUczRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUU3RDtJQVNFLGdDQUFtQixPQUE2QjtRQUE3QixZQUFPLEdBQVAsT0FBTyxDQUFzQjtRQUZoRCxrQkFBYSxHQUFtQixFQUFFLENBQUM7SUFFZ0IsQ0FBQzs7OztJQUU3Qyx5Q0FBUTs7O0lBQWY7UUFBQSxpQkFNQztRQUxDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUNyQixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxTQUFTOzs7O1FBQUMsVUFBQSxDQUFDO1lBQzlCLEtBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBQ2xCLENBQUMsRUFBQyxDQUNILENBQUM7SUFDSixDQUFDOzs7O0lBRUQsNENBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPOzs7O1FBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQWYsQ0FBZSxFQUFDLENBQUM7SUFDbkQsQ0FBQzs7Z0JBckJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO29CQUMxQixxYkFBMkM7O2lCQUU1Qzs7OztnQkFOUSxvQkFBb0I7O0lBd0I3Qiw2QkFBQztDQUFBLEFBdEJELElBc0JDO1NBakJZLHNCQUFzQjs7O0lBQ2pDLHdDQUFxQjs7SUFDckIsK0NBQW1DOztJQUV2Qix5Q0FBb0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgQnJlYWRjcnVtYiB9IGZyb20gJy4vYnJlYWRjcnVtYic7XHJcbmltcG9ydCB7IFBwQnJlYWRjcnVtYnNTZXJ2aWNlIH0gZnJvbSAnLi9icmVhZGNydW1icy5zZXJ2aWNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAncHAtYnJlYWRjcnVtYnMnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9icmVhZGNydW1icy5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vYnJlYWRjcnVtYnMuY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgUHBCcmVhZGNydW1ic0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICBjcnVtYnM6IEJyZWFkY3J1bWJbXTtcclxuICBzdWJzY3JpcHRpb25zOiBTdWJzY3JpcHRpb25bXSA9IFtdO1xyXG5cclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgc2VydmljZTogUHBCcmVhZGNydW1ic1NlcnZpY2UpIHt9XHJcblxyXG4gIHB1YmxpYyBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5wdXNoKFxyXG4gICAgICB0aGlzLnNlcnZpY2UuY3J1bWJzJC5zdWJzY3JpYmUoeCA9PiB7XHJcbiAgICAgICAgdGhpcy5jcnVtYnMgPSB4O1xyXG4gICAgICB9KVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xyXG4gICAgdGhpcy5zdWJzY3JpcHRpb25zLmZvckVhY2goeCA9PiB4LnVuc3Vic2NyaWJlKCkpO1xyXG4gIH1cclxufVxyXG4iXX0=