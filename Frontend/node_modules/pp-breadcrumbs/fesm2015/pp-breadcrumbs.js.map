{"version":3,"file":"pp-breadcrumbs.js.map","sources":["ng://pp-breadcrumbs/lib/breadcrumbs.resolver.ts","ng://pp-breadcrumbs/lib/breadcrumbs.service.ts","ng://pp-breadcrumbs/lib/breadcrumbs.component.ts","ng://pp-breadcrumbs/lib/breadcrumbs.module.ts"],"sourcesContent":["import { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, UrlSegment } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Breadcrumb } from './breadcrumb';\r\nimport { Injectable } from '@angular/core';\r\nimport { template, templateSettings } from 'lodash';\r\n\r\ntemplateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\r\n\r\n@Injectable()\r\nexport class PpBreadcrumbsResolver implements Resolve<Breadcrumb[]> {\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Breadcrumb[]> | Promise<Breadcrumb[]> | Breadcrumb[] {\r\n    const data = route.routeConfig.data;\r\n    const path = this.getFullPath(route);\r\n    const rawText = typeof data.breadcrumbs === 'string' ? data.breadcrumbs : data.breadcrumbs.text || data.text || path;\r\n\r\n    return of([\r\n      {\r\n        path: path,\r\n        text: this.stringFormat(rawText, route.data)\r\n      }\r\n    ]);\r\n  }\r\n\r\n  getFullPath(route: ActivatedRouteSnapshot): string {\r\n    const relativePath = (segments: UrlSegment[]) => segments.reduce((a, v) => (a += '/' + v.path), '');\r\n    const fullPath = (routes: ActivatedRouteSnapshot[]) => routes.reduce((a, v) => (a += relativePath(v.url)), '');\r\n    return fullPath(route.pathFromRoot);\r\n  }\r\n\r\n  private stringFormat(templateString: string, binding: any): string {\r\n    const compiled = template(templateString);\r\n    return compiled(binding);\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot, NavigationEnd, Router } from '@angular/router';\r\nimport { Observable, BehaviorSubject, of, concat, from } from 'rxjs';\r\n\r\nimport { PpBreadcrumbsResolver } from './breadcrumbs.resolver';\r\nimport { filter, mergeMap, distinct, toArray, first } from 'rxjs/operators';\r\nimport { Breadcrumb } from './breadcrumb';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PpBreadcrumbsService {\r\n\r\n  postProcess: (crumbs: Breadcrumb[]) => Promise<Breadcrumb[]> | Observable<Breadcrumb[]> | Breadcrumb[];\r\n\r\n  private breadcrumbs = new BehaviorSubject<Breadcrumb[]>([]);\r\n  private defaultResolver = new PpBreadcrumbsResolver();\r\n\r\n  get crumbs$(): Observable<Breadcrumb[]> {\r\n    return this.breadcrumbs;\r\n  }\r\n\r\n  constructor(private router: Router, route: ActivatedRoute, private injector: Injector) {\r\n    this.router.events.pipe(filter(x => x instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\r\n      this.resolveCrumbs(router.routerState.snapshot.root)\r\n        .pipe(\r\n          mergeMap(breadcrumbs => breadcrumbs),\r\n          distinct(breadcrumb => breadcrumb.text),\r\n          toArray(),\r\n          mergeMap(breadcrumbs => {\r\n            return this.postProcess ? this.wrapIntoObservable(this.postProcess(breadcrumbs)).pipe(first()) : of(breadcrumbs);\r\n          })\r\n        )\r\n        .subscribe(breadcrumbs => {\r\n          this.breadcrumbs.next(breadcrumbs);\r\n        });\r\n    });\r\n  }\r\n\r\n  private resolveCrumbs(route: ActivatedRouteSnapshot): Observable<Breadcrumb[]> {\r\n    let crumbs$: Observable<Breadcrumb[]> = of([]);\r\n    const data = route.routeConfig && route.routeConfig.data;\r\n\r\n    if (data && data.breadcrumbs) {\r\n      const resolver: PpBreadcrumbsResolver =\r\n        data.breadcrumbs.prototype instanceof PpBreadcrumbsResolver ? this.injector.get(data.breadcrumbs) : this.defaultResolver;\r\n\r\n      const result = resolver.resolve(route, this.router.routerState.snapshot);\r\n      crumbs$ = this.wrapIntoObservable<Breadcrumb[]>(result).pipe(first());\r\n    }\r\n\r\n    return route.firstChild ? concat(crumbs$, this.resolveCrumbs(route.firstChild)) : crumbs$;\r\n  }\r\n\r\n  private wrapIntoObservable<T>(value: T | Promise<T> | Observable<T>): Observable<T> {\r\n    return value instanceof Observable ? value : this.isPromise(value) ? from(Promise.resolve(value)) : of(value as T);\r\n  }\r\n\r\n  private isPromise(value: any): boolean {\r\n    return value && typeof value.then === 'function';\r\n  }\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Breadcrumb } from './breadcrumb';\r\nimport { PpBreadcrumbsService } from './breadcrumbs.service';\r\n\r\n@Component({\r\n  selector: 'pp-breadcrumbs',\r\n  templateUrl: './breadcrumbs.component.html',\r\n  styleUrls: ['./breadcrumbs.component.scss']\r\n})\r\nexport class PpBreadcrumbsComponent implements OnInit, OnDestroy {\r\n  crumbs: Breadcrumb[];\r\n  subscriptions: Subscription[] = [];\r\n\r\n  constructor(public service: PpBreadcrumbsService) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.subscriptions.push(\r\n      this.service.crumbs$.subscribe(x => {\r\n        this.crumbs = x;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(x => x.unsubscribe());\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {CommonModule} from '@angular/common';\n\nimport { PpBreadcrumbsComponent } from './breadcrumbs.component';\n\n@NgModule({\n  declarations: [PpBreadcrumbsComponent],\n  imports: [CommonModule, RouterModule],\n  exports: [PpBreadcrumbsComponent]\n})\nexport class PpBreadcrumbsModule { }\n"],"names":[],"mappings":"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"}
