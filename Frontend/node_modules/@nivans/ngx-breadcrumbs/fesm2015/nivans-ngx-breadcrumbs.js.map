{"version":3,"file":"nivans-ngx-breadcrumbs.js.map","sources":["ng://@nivans/ngx-breadcrumbs/lib/ngx-breadcrumbs.service.ts","ng://@nivans/ngx-breadcrumbs/lib/ngx-breadcrumbs.component.ts","ng://@nivans/ngx-breadcrumbs/lib/ngx-breadcrumbs.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { NgxBreadcrumb } from './ngx-breadcrumb';\n\n@Injectable({providedIn: 'root'})\nexport class NgxBreadcrumbsService {\n  dynamicCrumbs: Subject<NgxBreadcrumb> = new Subject<NgxBreadcrumb>();\n\n  constructor() { }\n\n  customCrumbTitle(title: string, component?) {\n    const crumb: NgxBreadcrumb = {label: title, component: component};\n    this.dynamicCrumbs.next(crumb);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router, Route } from '@angular/router';\nimport { filter, map } from 'rxjs/internal/operators';\nimport { NgxBreadcrumb } from './ngx-breadcrumb';\nimport { Observable, of } from 'rxjs';\nimport { NgxBreadcrumbsService } from './ngx-breadcrumbs.service';\n\n@Component({\n  selector: 'nvs-ngx-breadcrumbs',\n  template: `\n    <nav aria-label=\"breadcrumb\"\n         *ngIf=\"show\">\n      <ol class=\"breadcrumb\">\n        <li *ngFor=\"let breadcrumb of breadcrumbs\"\n            class=\"breadcrumb-item\"\n            [ngClass]=\"{'active': !breadcrumb.url}\">\n          <a [routerLink]=\"[breadcrumb.url]\"\n             *ngIf=\"breadcrumb.url\">\n            <i class=\"{{ breadcrumb.icon }}\" *ngIf=\"breadcrumb.icon\"></i>\n            {{ breadcrumb.label }}\n          </a>\n          <span *ngIf=\"!breadcrumb.url\">\n            <i class=\"{{ breadcrumb.icon }}\" *ngIf=\"breadcrumb.icon\"></i>\n            {{ breadcrumb.label }}\n          </span>\n        </li>\n      </ol>\n    </nav>\n  `,\n  styles: []\n})\nexport class NgxBreadcrumbsComponent implements OnInit {\n  customCrumbs = [];\n  breadcrumbs: NgxBreadcrumb[];\n  show = true;\n\n  constructor(private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private service: NgxBreadcrumbsService) {}\n\n  ngOnInit() {\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe(() => {\n        this.breadcrumbs = this.handleRoute(this.activatedRoute.root);\n      });\n    this.service.dynamicCrumbs.subscribe(crumb => {\n      this.customCrumbs[crumb.component] = crumb;\n      this.breadcrumbs = this.handleRoute(this.activatedRoute.root);\n    });\n  }\n\n  handleRoute(route: ActivatedRoute,\n              breadcrumbs: Array<NgxBreadcrumb> = []):\n  Array<NgxBreadcrumb> {\n    if (breadcrumbs.length === 0) {\n      breadcrumbs.push(this.getCrumbFromRoute(this.getHomeRoute()));\n    }\n\n    if (route.routeConfig !== null &&\n        'data' in route.routeConfig &&\n        'breadcrumb' in route.routeConfig.data &&\n        !route.routeConfig.data.isHome\n    ) {\n      const urlPrefix = breadcrumbs[breadcrumbs.length - 1] ? breadcrumbs[breadcrumbs.length - 1].url : '';\n      const customCrumb = route.routeConfig.component && this.customCrumbs[route.routeConfig.component.name];\n      const defaultCrumb = this.getCrumbFromRoute(route.routeConfig, urlPrefix);\n      const crumb = customCrumb ? Object.assign(defaultCrumb, customCrumb) : defaultCrumb;\n      breadcrumbs = [ ...breadcrumbs, crumb ];\n    }\n\n    if (route.firstChild) {\n      return this.handleRoute(route.firstChild, breadcrumbs);\n    }\n\n    delete(breadcrumbs[breadcrumbs.length - 1].url);\n    this.show = breadcrumbs[breadcrumbs.length - 1].show;\n    return breadcrumbs;\n  }\n\n  getHomeRoute() {\n    return this.router.config.filter(crumb => crumb.data && crumb.data.isHome)[0];\n  }\n\n  getCrumbFromRoute(route: Route, urlPrefix = null): NgxBreadcrumb {\n    return {\n      label: route.data && route.data.breadcrumb,\n      url: urlPrefix ? `${urlPrefix}/${route.path}` : route.path || '/',\n      component: route.component && route.component.name,\n      icon: route.data.icon,\n      show: route.data.hasOwnProperty('show') ? route.data.show : true\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxBreadcrumbsComponent } from './ngx-breadcrumbs.component';\nimport { NgxBreadcrumbsService } from './ngx-breadcrumbs.service';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  declarations: [NgxBreadcrumbsComponent],\n  exports: [NgxBreadcrumbsComponent],\n  providers: [NgxBreadcrumbsService]\n})\nexport class NgxBreadcrumbsModule { }\n"],"names":[],"mappings":"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"}
