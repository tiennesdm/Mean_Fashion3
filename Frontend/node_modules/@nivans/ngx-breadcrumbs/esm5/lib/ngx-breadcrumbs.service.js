/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
var NgxBreadcrumbsService = /** @class */ (function () {
    function NgxBreadcrumbsService() {
        this.dynamicCrumbs = new Subject();
    }
    /**
     * @param {?} title
     * @param {?=} component
     * @return {?}
     */
    NgxBreadcrumbsService.prototype.customCrumbTitle = /**
     * @param {?} title
     * @param {?=} component
     * @return {?}
     */
    function (title, component) {
        var /** @type {?} */ crumb = { label: title, component: component };
        this.dynamicCrumbs.next(crumb);
    };
    NgxBreadcrumbsService.decorators = [
        { type: Injectable, args: [{ providedIn: 'root' },] },
    ];
    /** @nocollapse */
    NgxBreadcrumbsService.ctorParameters = function () { return []; };
    /** @nocollapse */ NgxBreadcrumbsService.ngInjectableDef = i0.defineInjectable({ factory: function NgxBreadcrumbsService_Factory() { return new NgxBreadcrumbsService(); }, token: NgxBreadcrumbsService, providedIn: "root" });
    return NgxBreadcrumbsService;
}());
export { NgxBreadcrumbsService };
function NgxBreadcrumbsService_tsickle_Closure_declarations() {
    /** @type {?} */
    NgxBreadcrumbsService.prototype.dynamicCrumbs;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWJyZWFkY3J1bWJzLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abml2YW5zL25neC1icmVhZGNydW1icy8iLCJzb3VyY2VzIjpbImxpYi9uZ3gtYnJlYWRjcnVtYnMuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDOzs7SUFPN0I7NkJBRndDLElBQUksT0FBTyxFQUFpQjtLQUVuRDs7Ozs7O0lBRWpCLGdEQUFnQjs7Ozs7SUFBaEIsVUFBaUIsS0FBYSxFQUFFLFNBQVU7UUFDeEMscUJBQU0sS0FBSyxHQUFrQixFQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBQyxDQUFDO1FBQ2xFLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ2hDOztnQkFURixVQUFVLFNBQUMsRUFBQyxVQUFVLEVBQUUsTUFBTSxFQUFDOzs7OztnQ0FKaEM7O1NBS2EscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTmd4QnJlYWRjcnVtYiB9IGZyb20gJy4vbmd4LWJyZWFkY3J1bWInO1xuXG5ASW5qZWN0YWJsZSh7cHJvdmlkZWRJbjogJ3Jvb3QnfSlcbmV4cG9ydCBjbGFzcyBOZ3hCcmVhZGNydW1ic1NlcnZpY2Uge1xuICBkeW5hbWljQ3J1bWJzOiBTdWJqZWN0PE5neEJyZWFkY3J1bWI+ID0gbmV3IFN1YmplY3Q8Tmd4QnJlYWRjcnVtYj4oKTtcblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIGN1c3RvbUNydW1iVGl0bGUodGl0bGU6IHN0cmluZywgY29tcG9uZW50Pykge1xuICAgIGNvbnN0IGNydW1iOiBOZ3hCcmVhZGNydW1iID0ge2xhYmVsOiB0aXRsZSwgY29tcG9uZW50OiBjb21wb25lbnR9O1xuICAgIHRoaXMuZHluYW1pY0NydW1icy5uZXh0KGNydW1iKTtcbiAgfVxufVxuIl19